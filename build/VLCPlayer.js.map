{"version":3,"file":"VLCPlayer.js","sourceRoot":"","sources":["../src/VLCPlayer.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    ViewProps,\n    StyleSheet,\n    Platform\n} from 'react-native'\nimport RCTVLCPlayer from \"./RCTVLCPlayer\";\n\n\ntype VLCPlayerProps = {\n    rate?: number,\n    seek?: number;\n    resume?: boolean;\n    snapshotPath?: string;\n    paused?: boolean;\n    autoplay?: boolean;\n    initOptions?: string[];\n\n    autoAspectRatio?: boolean;\n    videoAspectRatio?: string;\n    volume?: number;\n    disableFocus?: boolean;\n    src?: string;\n    playInBackground?: boolean;\n    playWhenInactive?: boolean;\n    resizeMode?: string;\n    poster?: string;\n    repeat?: boolean;\n    muted?: boolean;\n    audioTrack?: number;\n    textTrack?: number;\n    progressUpdateInterval?: number;\n\n    onVideoLoadStart?: (event?: any) => void;\n    onVideoError?: (event?: any) => void;\n    onVideoProgress?: (event?: any) => void;\n    onVideoEnded?: (event?: any) => void;\n    onVideoPlaying?: (event?: any) => void;\n    onVideoPaused?: (event?: any) => void;\n    onVideoStopped?: (event?: any) => void;\n    onVideoBuffering?: (event?: any) => void;\n    onVideoOpen?: (event?: any) => void;\n    onVideoLoad?: (event?: any) => void;\n\n    /* Wrapper component */\n    source?: {\n        uri: string;\n    };\n    subtitleUri?: string;\n\n    onError?: (event?: any) => void;\n    onProgress?: (event?: any) => void;\n    onEnded?: (event?: any) => void;\n    onStopped?: (event?: any) => void;\n    onPlaying?: (event?: any) => void;\n    onPaused?: (event?: any) => void;\n\n    // /* Required by react-native */\n    // scaleX?: number;\n    // scaleY?: number;\n    // translateX?: number;\n    // translateY?: number;\n    // rotation?: number;\n} & ViewProps;\n\nexport default function VLCPlayer(props: VLCPlayerProps) {\n    const {\n        // progressUpdateInterval = 250,\n        paused = false,\n        seek = 0,\n        resume = false,\n        snapshotPath = \"\",\n        // autoAspectRatio = false,\n        videoAspectRatio = \"\",\n        // subtitleUri = \"\",\n        rate = 1,\n        muted = false,\n        // audioTrack = -1,\n        // textTrack = -1,\n    } = props;\n\n    // constructor(props, context) {\n    //   super(props, context);\n    //   this.seek = this.seek.bind(this);\n    //   this.resume = this.resume.bind(this);\n    //   this.snapshot = this.snapshot.bind(this);\n    //   this._assignRoot = this._assignRoot.bind(this);\n    //   this._onError = this._onError.bind(this);\n    //   this._onProgress = this._onProgress.bind(this);\n    //   this._onEnded = this._onEnded.bind(this);\n    //   this._onPlaying = this._onPlaying.bind(this);\n    //   this._onStopped = this._onStopped.bind(this);\n    //   this._onPaused = this._onPaused.bind(this);\n    //   this._onBuffering = this._onBuffering.bind(this);\n    //   this._onOpen = this._onOpen.bind(this);\n    //   this._onLoadStart = this._onLoadStart.bind(this);\n    //   this._onLoad = this._onLoad.bind(this);\n    //   this.changeVideoAspectRatio = this.changeVideoAspectRatio.bind(this);\n    // }\n    // static defaultProps = {\n    //   autoplay: true,\n    // };\n    \n    // const setNativeProps = (nativeProps: Partial<VLCPlayerProps>) => {\n    //     vlcRef.current?.setNativeProps(nativeProps);\n    // }\n\n    // const seek = (pos: number) => setNativeProps({ seek: pos });\n    \n\n    // const resume = (isResume: boolean) => setNativeProps({ resume: isResume })\n\n    // const snapshot = (path: string) => setNativeProps({ snapshotPath: path });\n\n    // const autoAspectRatio = (isAuto: boolean) => setNativeProps({ autoAspectRatio: isAuto });\n\n    // const changeVideoAspectRatio = (ratio: string) => setNativeProps({ videoAspectRatio: ratio });\n\n    \n\n    const _onBuffering = (event: any) => {\n        if (props.onVideoBuffering) {\n            props.onVideoBuffering(event);\n        }\n    }\n\n    const _onError = (event: any) => {\n        if (props.onError) {\n            props.onError(event);\n        }\n    }\n\n    const _onOpen = (event: any) => {\n        if (props.onVideoOpen) {\n            props.onVideoOpen(event);\n        }\n    }\n\n    const _onLoadStart = (event: any) => {\n        if (props.onVideoLoadStart) {\n            props.onVideoLoadStart(event);\n        }\n    }\n\n    const _onProgress = (event: any) => {\n        if (props.onVideoProgress) {\n            props.onVideoProgress(event);\n        }\n    }\n\n    const _onEnded = (event: any) => {\n        if (props.onEnded) {\n            props.onEnded(event);\n        }\n    }\n\n    const _onPaused = (event: any) => {\n        if (props.onPaused) {\n            props.onPaused(event);\n        }\n    }\n\n    const _onPlaying = (event: any) => {\n        if (props.onPlaying) {\n            props.onPlaying(event);\n        }\n    }\n\n    const _onLoad = (event: any) => {\n        if (props.onVideoLoad) {\n            props.onVideoLoad(event);\n        }\n    }\n\n    const _onStopped = (event: any) => {\n        if(props.onVideoStopped) {\n            props.onVideoStopped(event)\n        }\n    }\n\n    let uri = props.source?.uri || \"\";\n\n    if (uri && uri.match(/^\\//)) uri = `file://${uri}`\n\n    let isNetwork = !!(uri && uri.match(/^https?:/));\n\n    const isAsset = !!(\n        uri && uri.match(/^(assets-library|file|content|ms-appx|ms-appdata):/)\n    );\n\n    if (!isAsset) isNetwork = true;\n\n    if (uri && uri.match(/^\\//)) isNetwork = false;\n\n    const {\n        autoplay = true,\n        initOptions = [],\n    } = props\n\n    let options: any \n    let opList: string[] = [...initOptions, '--input-repeat=1000']\n\n    if(Platform.OS === \"ios\") {\n        options = opList.reduce((acc, cur) => {\n            if(!cur.startsWith(\"--\")) return acc\n            cur = cur.slice(2)\n            const [key, value] = cur.split(\"=\")\n            acc[key] = value\n            return acc\n        }, {})\n    } else {\n        options = opList\n    }\n\n    const source = {\n        uri,\n        isNetwork,\n        autoplay,\n        initOptions: options,\n    };\n    \n    const nativeProps = {\n        // ...props,\n        style: [styles.base, props.style],\n        source,\n        paused,\n        // seek,\n        // resume,\n        snapshotPath,\n        videoAspectRatio,\n        // subtitleUri,\n        muted,\n        rate,\n        onVideoLoadStart: _onLoadStart,\n        onVideoOpen: _onOpen,\n        onVideoError: _onError,\n        onVideoProgress: _onProgress,\n        onVideoEnded: _onEnded,\n        onVideoEnd: _onEnded,\n        onVideoPlaying: _onPlaying,\n        onVideoPaused: _onPaused,\n        onVideoStopped: _onStopped,\n        onVideoBuffering: _onBuffering,\n        onVideoLoad: _onLoad,\n\n        // onVideoProgress,\n        // onVideoPaused,\n        // onVideoStopped,\n        // onVideoBuffering,\n        // onVideoPlaying,\n        // onVideoEnded,\n        // onVideoError,\n        // onVideoOpen,\n        // onVideoLoadStart,\n        // onVideoLoad,\n        // progressUpdateInterval,\n    };\n\n    return (<RCTVLCPlayer {...nativeProps } />);\n}\n\n\n\nconst styles = StyleSheet.create({\n    base: {\n        overflow: \"hidden\",\n        flex: 1\n    },\n});\n// const RCTVLCPlayer = requireNativeComponent(\"RCTVLCPlayer\", VLCPlayer);\n"]}