{"version":3,"file":"BackHandle.js","sourceRoot":"","sources":["../../src/playerView/BackHandle.ts"],"names":[],"mappings":"AAAA;;GAEG;AAEH,IAAI,gBAAgB,GAAa,EAAE,CAAC;AACpC,IAAI,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;AAEjC,SAAS,WAAW,CAAC,KAAY,EAAE,KAAa;IAC5C,IAAI,QAAQ,GAAS,EAAE,CAAC;IACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,IAAI,CAAC,KAAK,KAAK,EAAE;YACb,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3B;KACJ;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC;AAED,SAAS,SAAS,CAAC,KAAY,EAAE,GAAQ;IACrC,IAAI,QAAQ,GAAS,EAAE,CAAC;IACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAClB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3B;KACJ;IACD,OAAO,QAAQ,CAAC;AACpB,CAAC;AAED,MAAM,UAAU,GAAG,GAAG,EAAE;IACpB,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;QAC7B,IAAI,WAAW,GAAG,gBAAgB,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAChE,gBAAgB,GAAG,WAAW,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC9E,IAAI,SAAS,GAAG,gBAAgB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAClD,gBAAgB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACrC,SAAS,IAAI,SAAS,EAAE,CAAC;QACzB,OAAO,KAAK,CAAC;KAChB;IACD,OAAO,IAAI,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,GAAW,EAAE,SAAc,EAAE,EAAE;IACpD,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IACrC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,CAAC,GAAW,EAAE,EAAE;IACvC,gBAAgB,GAAG,SAAS,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;IACpD,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACjC,CAAC,CAAC;AAEF,eAAe;IACX,UAAU;IACV,eAAe;IACf,kBAAkB;CACrB,CAAC","sourcesContent":["/**\n * Created by aolc on 2018/5/22.\n */\n\nlet backFunctionKeys: string[] = [];\nlet backFunctionsMap = new Map();\n\nfunction removeIndex(array: any[], index: number) {\n    let newArray:any[] = [];\n    for (let i = 0; i < array.length; i++) {\n        if (i !== index) {\n            newArray.push(array[i]);\n        }\n    }\n    return newArray;\n}\n\nfunction removeKey(array: any[], key: any) {\n    let newArray:any[] = [];\n    for (let i = 0; i < array.length; i++) {\n        if (array[i] !== key) {\n            newArray.push(array[i]);\n        }\n    }\n    return newArray;\n}\n\nconst handleBack = () => {\n    if (backFunctionKeys.length > 0) {\n        let functionKey = backFunctionKeys[backFunctionKeys.length - 1];\n        backFunctionKeys = removeIndex(backFunctionKeys, backFunctionKeys.length - 1);\n        let functionA = backFunctionsMap.get(functionKey);\n        backFunctionsMap.delete(functionKey);\n        functionA && functionA();\n        return false;\n    }\n    return true;\n};\n\nconst addBackFunction = (key: string, functionA: any) => {\n    backFunctionsMap.set(key, functionA);\n    backFunctionKeys.push(key);\n};\n\nconst removeBackFunction = (key: string) => {\n    backFunctionKeys = removeKey(backFunctionKeys, key);\n    backFunctionsMap.delete(key);\n};\n\nexport default {\n    handleBack,\n    addBackFunction,\n    removeBackFunction,\n};\n"]}